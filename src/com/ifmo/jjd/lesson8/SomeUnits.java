package com.ifmo.jjd.lesson8;
// ключевое слово final, можно использовать с
// классами - от  такого класса (final) нельзя наследоваться
// свойствами \ поля \ атрибуты - не могут быть изменены, значения должны задаваться
// при объявлении или в конструкторе
// методами - final нельзя переопределять в дочерних классах
// аргументами методов(то что передаем в фигурные скобки) - такие переменные
// доступны только для чтения, не можем изменить значения внутри переменной,
// сам объект при этом не меняется
// переменными -



// ключевое слово static можно использовать
// классами - которые сложены в другой класс
// со свойствами
// с методами
// в таком случае свойства и методы не принадлежат объектам,
// а принадлежит самому классу
// свойства -  это не характеристика объекта(это значение которое лежит внутри класса)

// можем задавать аткие значения где угодно, + в статическом блоке


// final и static можно использовать вместе
// final значение переменной изменить нельзя static не создает объект (создание констант)

import java.util.Arrays;

public class SomeUnits {
    private final String PREFIX;
    private final double PI_VAR = 3.14; // значение одинакое всегда

    public double e_var = 2.718;
    static double someVar = 0;

    public SomeUnits(String prefix){  // если создадим 5 объектов, то someVar будет  + = 5
        this.PREFIX = prefix;   // тут можно менять при инициализации конструктора
        someVar++;
    }






public static int sum(int a, int b){
        // из статического метода нельзя обращаться к нестатическим
        // свойствам и методам
        return a + b;
}
public static void main (String[] args){
        //вызов статического метода: Имя класса.имяМетода();
        // обычно обслуживающие методы
        // если метод создает объект(фабричный метод)
    System.out.println(SomeUnits.sum(45, 89));
   // Arrays.toString();
   // Math.random();
}


}
